:set -XOverloadedStrings
:set -Wall

:set prompt "\nλ> "
:set prompt "\ESC[01;33m\STXλ\ESC[0m\STX> "

:def hoogle \s -> return $ ":! hoogle --count=15 \"" ++ s ++ "\""
:def! doc return . (":!hoogle --count=50 --color --info " ++) . escape


:def hlint \s -> return $ ":! hlint \"" ++ s ++ "\""
:def pointfree \s -> return $ ":! pointfree \"" ++ s ++ "\""

:def source readFile

:def no-pretty \_ -> return (":set -interactive-print System.IO.print")
:def pretty \_ -> return ("import Text.Show.Pretty (pPrint, ppShow)\n:set -interactive-print pPrint")

:pretty

import Text.Show.Pretty (ppShow)
import Language.Haskell.HsColour
import Language.Haskell.HsColour.Colourise

let colorPrint = putStrLn . hscolour TTY defaultColourPrefs False False "" False . ppShow

:def no-color \_ -> return (":set -interactive-print System.IO.print")
:def color \_ -> return (":set -interactive-print colorPrint")
